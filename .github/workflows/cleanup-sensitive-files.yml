name: Cleanup Sensitive Files

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cleanup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Remove LICENSE files
        run: |
          # Find and remove all LICENSE files except root LICENSE if needed
          find . -name "LICENSE" ! -path "./.git/*" -type f -delete
          echo "✅ Removed LICENSE files"

      - name: Remove sensitive credential files
        run: |
          # Remove Google service account files
          find . -type f \( -name "*google-service-account*" -o -name "*google-services.json" -o -name "*enategaprod*" -o -name "*credentials.json" \) ! -path "./.git/*" -delete
          echo "✅ Removed sensitive credential files"

      - name: Remove .env files with secrets
        run: |
          # Remove .env files that might contain secrets
          find . -type f -name ".env*" ! -path "./.git/*" ! -name ".env.example" -delete
          echo "✅ Removed .env files"

      - name: Check for remaining secrets
        run: |
          # Check for common secret patterns
          if grep -r "PRIVATE KEY\|private_key\|api_key\|API_KEY\|secret\|SECRET" . --include="*.js" --include="*.ts" --include="*.json" --include="*.env" 2>/dev/null | grep -v node_modules | grep -v ".git"; then
            echo "⚠️ Warning: Potential secrets found"
          else
            echo "✅ No obvious secrets detected"
          fi

      - name: Commit cleanup if needed
        run: |
          git config user.name "EatsGram Cleanup Bot"
          git config user.email "cleanup@eatsgram.local"
          
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "Cleanup: Remove sensitive files and credentials" || echo "No changes to commit"
            git push origin main || echo "Push failed - might be protected branch"
          else
            echo "No sensitive files to remove"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
