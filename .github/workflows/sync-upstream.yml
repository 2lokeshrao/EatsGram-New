name: Sync with Upstream Repository

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout EatsGram repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/enatega/food-delivery-multivendor.git || true
          git remote set-url upstream https://github.com/enatega/food-delivery-multivendor.git

      - name: Fetch upstream changes
        run: |
          git fetch upstream main --depth=1

      - name: Check for new commits
        id: check
        run: |
          UPSTREAM_HASH=$(git rev-parse upstream/main)
          LOCAL_HASH=$(git rev-parse origin/main)
          if [ "$UPSTREAM_HASH" != "$LOCAL_HASH" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "upstream_hash=$UPSTREAM_HASH" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Merge upstream changes
        if: steps.check.outputs.has_changes == 'true'
        run: |
          git config user.name "EatsGram Bot"
          git config user.email "bot@eatsgram.local"
          git merge upstream/main --allow-unrelated-histories -m "Sync: Merge upstream updates from enatega repository" || true

      - name: Replace enatega with EatsGram
        if: steps.check.outputs.has_changes == 'true'
        run: |
          find . -type f \( -name "*.js" -o -name "*.jsx" -o -name "*.ts" -o -name "*.tsx" -o -name "*.json" -o -name "*.md" -o -name "*.yml" -o -name "*.yaml" -o -name "*.env*" \) ! -path "./.git/*" ! -path "./node_modules/*" ! -path "./.github/*" -exec sed -i 's/enatega/eatsgram/g; s/Enatega/EatsGram/g; s/ENATEGA/EATSGRAM/g' {} \;

      - name: Remove sensitive files
        if: steps.check.outputs.has_changes == 'true'
        run: |
          find . -type f \( -name "*service-account*" -o -name "*credentials*" -o -name "*secret*" -o -name "*enategaprod*" \) ! -path "./.git/*" -delete

      - name: Commit changes
        if: steps.check.outputs.has_changes == 'true'
        run: |
          git add -A
          git commit -m "Sync: Update from upstream enatega repository - Rebrand to EatsGram" || echo "No changes to commit"

      - name: Push to EatsGram repository
        if: steps.check.outputs.has_changes == 'true'
        run: |
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create notification
        if: steps.check.outputs.has_changes == 'true'
        run: |
          echo "✅ Successfully synced upstream changes and rebranded to EatsGram"
          echo "Upstream commit: ${{ steps.check.outputs.upstream_hash }}"

      - name: No changes notification
        if: steps.check.outputs.has_changes == 'false'
        run: |
          echo "ℹ️ No new changes from upstream repository"
